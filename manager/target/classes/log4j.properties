log4j.rootLogger=info, console, debug, app, error  
  
###Console ###  
log4j.appender.console = org.apache.log4j.ConsoleAppender  
log4j.appender.console.Target = System.out  
log4j.appender.console.layout = org.apache.log4j.PatternLayout  
log4j.appender.console.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
  
### debug ###    
log4j.appender.debug = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.debug.File = log/debug.log  
log4j.appender.debug.Append = true  
log4j.appender.debug.Threshold = DEBUG  
log4j.appender.debug.DatePattern='.'yyyy-MM-dd  
log4j.appender.debug.layout = org.apache.log4j.PatternLayout  
log4j.appender.debug.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n  
  
### app ###    
log4j.appender.app = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.app.File = log/app.log  
log4j.appender.app.Append = true  
log4j.appender.app.Threshold = INFO  
log4j.appender.app.DatePattern='.'yyyy-MM-dd  
log4j.appender.app.layout = org.apache.log4j.PatternLayout  
log4j.appender.app.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n 
  
### Error ###  
log4j.appender.error = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.error.File = log/error.log  
log4j.appender.error.Append = true  
log4j.appender.error.Threshold = ERROR   
log4j.appender.error.DatePattern='.'yyyy-MM-dd  
log4j.appender.error.layout = org.apache.log4j.PatternLayout  
log4j.appender.error.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n  

# 设置mybatis打印
log4j.logger.com.mybatis=DEBUG
log4j.logger.com.mybatis.common.jdbc.SimpleDataSource=DEBUG 
log4j.logger.com.mybatis.common.jdbc.ScriptRunner=DEBUG 
log4j.logger.com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG 
#log4j.logger.org.mybatis.com.cbw.mappers.TbItemMapper=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG


######################################
#         log4j配置相关说明
######################################
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%m 输出代码中指定的信息
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
#log4j提供4种布局:
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息
#log4j中有五级logger 输出级别:
#FATAL 0
#ERROR 3
#WARN 4
#INFO 6
#DEBUG 7
######################################
#          log4j相关配置
######################################
#日志输出级别
#log4j.rootLogger=DEBUG,stdout,other
##设置stdout的日志输出控制台
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
##输出日志到控制台的方式，默认为System.out
#log4j.appender.stdout.Target=System.out
##设置使用灵活布局
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
##灵活定义输出格式
#log4j.appender.stdout.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %m %n
##设置other的日志输出控制台
#log4j.appender.other=org.apache.log4j.RollingFileAppender
##设置other的输出日志
#log4j.appender.other.File=/work-attend/logs/log.txt
##设置other的日志最大限制
#log4j.appender.other.MaxFileSize=1024KB
##最多只保存20个备份文件
#log4j.appender.other.MaxBackupIndex=1000  
##输出INFO级别以上的日志
#log4j.appender.other.Threshold=INFO
##设置使用灵活布局
#log4j.appender.other.layout=org.apache.log4j.PatternLayout  
##灵活定义输出格式
#log4j.appender.other.layout.ConversionPattern=[%p][%d{yyyy-MM-dd HH:mm:ss}] %l %t %m %n    
#
####显示SQL语句部分
#log4j.logger.com.mybatis=DEBUG
#log4j.logger.com.mybatis.common.jdbc.SimpleDataSource=DEBUG
#log4j.logger.com.mybatis.common.jdbc.ScriptRunner=DEBUG
#log4j.logger.com.mybatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
#log4j.logger.java.sql.Connection=DEBUG
#log4j.logger.java.sql.Statement=DEBUG
#log4j.logger.java.sql.PreparedStatement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG


